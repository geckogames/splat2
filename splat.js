// Generated by CoffeeScript 1.9.3
(function() {
  var ImageItem, Item, canvas, credits, ctx, dimensions, dt, fps, frame, last, now, render, screen, screens, step, timestamp, update,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  fps = 60;

  credits = "By GeckoGames";

  screens = [];

  screen = 0;

  canvas = document.querySelector('#cvas');

  ctx = canvas.getContext('2d');

  dimensions = {
    width: function() {
      return canvas.width = window.innerWidth || document.clientWidth || document.body.clientWidth;
    },
    height: function() {
      return canvas.height = window.innerHeight || document.clientHeight || document.body.clientHeight;
    }
  };

  update = function() {
    var i, j, len, ref, results;
    ref = screens[screen].items;
    results = [];
    for (j = 0, len = ref.length; j < len; j++) {
      i = ref[j];
      results.push(i.update());
    }
    return results;
  };

  render = function() {
    var i, j, len, originx, originy, ref, results;
    dimensions.width();
    dimensions.height();
    ctx.textAlign = "center";
    ctx.fillStyle = "#fff";
    ctx.font = "10px sans-serif";
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    ctx.fillText(credits, canvas.width / 2, canvas.height - 10);
    originx = canvas.width / 2 - screens[screen].calcOrigin();
    originy = canvas.height / 2 + screens[screen].height / 2;
    ref = screens[screen].items;
    results = [];
    for (j = 0, len = ref.length; j < len; j++) {
      i = ref[j];
      if (i.image) {
        results.push(ctx.drawImage(i.image, originx - i.x, canvas.height - originy - i.y));
      } else {
        results.push(void 0);
      }
    }
    return results;
  };

  timestamp = function() {
    var ref;
    return (ref = window.performance.now()) != null ? ref : new Date().getTime();
  };

  now = 0;

  dt = 0;

  last = timestamp();

  step = 1 / fps;

  frame = function() {
    now = timestamp();
    dt = dt + Math.min(1, (now - last) / 1000);
    while (dt > step) {
      dt = dt - step;
      update();
    }
    render();
    last = now;
    return requestAnimationFrame(frame);
  };

  window.onload = function() {
    return requestAnimationFrame(frame);
  };

  Item = (function() {
    function Item() {}

    Item.prototype.update = function() {};

    Item.prototype.image = new Image;

    Item.prototype.x = 0;

    Item.prototype.y = 0;

    return Item;

  })();

  ImageItem = (function(superClass) {
    extend(ImageItem, superClass);

    function ImageItem(x, y, url) {
      this.x = x;
      this.y = y;
      this.image.src = url;
    }

    return ImageItem;

  })(Item);

  screens[0] = {
    calcOrigin: function() {
      return 0;
    },
    items: [new ImageItem(227, 0, "img/logo-shaded.png")],
    height: 300
  };

}).call(this);
